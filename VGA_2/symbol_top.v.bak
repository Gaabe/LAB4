// Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus Prime License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// PROGRAM		"Quartus Prime"
// VERSION		"Version 16.0.0 Build 211 04/27/2016 SJ Lite Edition"
// CREATED		"Tue Aug 02 15:38:05 2016"

module symbol_top(
	wr_en,
	CLOCK_50,
	data_in,
	KEY0,
	KEY1,
	VGA_HS,
	VGA_VS,
	column,
	freeslots,
	row,
	VGA_B,
	VGA_G,
	VGA_R
);


input wire	wr_en;
input wire	CLOCK_50;
input wire	[31:0] data_in;
input wire	KEY0;
input wire	KEY1;
output wire	VGA_HS;
output wire	VGA_VS;
output wire	[9:0] column;
output wire	[3:0] freeslots;
output wire	[8:0] row;
output wire	[7:0] VGA_B;
output wire	[7:0] VGA_G;
output wire	[7:0] VGA_R;

wire	SYNTHESIZED_WIRE_11;
wire	SYNTHESIZED_WIRE_1;
wire	SYNTHESIZED_WIRE_12;
wire	SYNTHESIZED_WIRE_4;
wire	SYNTHESIZED_WIRE_5;
wire	[23:0] SYNTHESIZED_WIRE_6;
wire	[7:0] SYNTHESIZED_WIRE_8;
wire	[7:0] SYNTHESIZED_WIRE_9;
wire	[7:0] SYNTHESIZED_WIRE_10;





FIFO	b2v_buffer(
	.clk(SYNTHESIZED_WIRE_11),
	.rst(KEY1),
	.rd_en(SYNTHESIZED_WIRE_1),
	.wr_en(wr_en),
	.data_in(data_in),
	.empty(SYNTHESIZED_WIRE_5),
	.data_pixel(SYNTHESIZED_WIRE_6),
	.freeslots(freeslots));


FIFO_reader	b2v_controller(
	.clk100(SYNTHESIZED_WIRE_11),
	.clk25(SYNTHESIZED_WIRE_12),
	.rst(KEY1),
	.videoon(SYNTHESIZED_WIRE_4),
	.empty(SYNTHESIZED_WIRE_5),
	.data_pixel(SYNTHESIZED_WIRE_6),
	.rd_en(SYNTHESIZED_WIRE_1),
	.blue(SYNTHESIZED_WIRE_8),
	.green(SYNTHESIZED_WIRE_9),
	.red(SYNTHESIZED_WIRE_10));


PixelLogic	b2v_dac_interface(
	.clk(SYNTHESIZED_WIRE_12),
	.reset(KEY1),
	.blue(SYNTHESIZED_WIRE_8),
	.green(SYNTHESIZED_WIRE_9),
	.red(SYNTHESIZED_WIRE_10),
	.hsync(VGA_HS),
	.vsync(VGA_VS),
	.videoon(SYNTHESIZED_WIRE_4),
	.b(VGA_B),
	.column(column),
	.g(VGA_G),
	.r(VGA_R),
	.row(row));


pll	b2v_pelele(
	.inclk0(CLOCK_50),
	.areset(KEY0),
	.c0(SYNTHESIZED_WIRE_11),
	.c1(SYNTHESIZED_WIRE_12)
	);


endmodule
